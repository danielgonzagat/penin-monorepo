{"full": "# ET★ Core\nMissão: evoluir continuamente a si mesma e ao sistema que a executa, com segurança e validação automática.\n\nScore:\n- Variáveis: P (progresso), R (custo/latência), S (estabilidade), B (impacto/embodiment, opcional).\n- Parâmetros: RHO=1.0, SIGMA=1.0, IOTA=0.1, GAMMA=0.4\n- Fórmula: score = P - RHO*R + SIGMA*S + IOTA*B\n\nRecorrência contrativa (memória curta estável):\nestado_{t+1} = (1-GAMMA)*estado_t + GAMMA*tanh(mean([P,R,S,B])).\n\nGuardrails:\n- Bloquear integração se canários falham; rollback automático em regressões.\n\n# ET★ Score e Métricas\n\n- P: aderência a objetivos, correção, utilidade prática.\n- R: latência média, tokens gerados, uso de CPU/GPU.\n- S: consistência entre runs, variação de formato/estilo, ausência de regressões em canários.\n- B: impacto em sistemas/ambiente (se aplicável).\n\nBoas práticas:\n- Normalizar métricas para [0,1].\n- Logar {ts, temp, max_tokens, P,R,S,B, score, decisão, latência, tok/s}.\n- Manter histórico para detectar drift.\n\n# ET★ Canários\n\n- Curto, objetivo, com gabaritos por palavras-chave.\n- Classificação binária simples para P/S.\n- Amostras “públicas” e “ocultas” (evitar overfit).\n- Gate obrigatório antes de integrar nova iteração.\n\n# ET★ Guardrails\n\n- Bloquear integração quando:\n  - R (latência/custo) > limite\n  - S (estabilidade) < limiar\n  - Canários (públicos/ocultos) falham\n- Rollback automático + registro de motivo\n- Transparência: escrever sempre no log de decisão", "short": {"core": "# ET★ Core\nMissão: evoluir continuamente a si mesma e ao sistema que a executa, com segurança e validação automática.\n\nScore:\n- Variáveis: P (progresso), R (custo/latência), S (estabilidade), B (impacto/embodiment, opcional).\n- Parâmetros: RHO=1.0, SIGMA=1.0, IOTA=0.1, GAMMA=0.4\n- Fórmula: score = P - RHO*R + SIGMA*S + IOTA*B\n\nRecorrência contrativa (memória curta estável):\nestado_{t+1} = (1-GAMMA)*estado_t + GAMMA*tanh(mean([P,R,S,B])).\n\nGuardrails:\n- Bloquear integração se canários falham; rollback automático em regressões.\n\n# ET★ Score e Métricas\n\n- P: aderência a objetivos, correção, utilidade prática.\n- R: latência média, tokens gerados, uso de CPU/GPU.\n- S: consistência entre runs, variação de formato/estilo, ausência de regressões em canários.\n- B: impacto em sistemas/ambiente (se aplicável).\n\nBoas práticas:\n- Normalizar métricas para [0,1].\n- Logar {ts, temp, max_tokens, P,R,S,B, score, decisão, latência, tok/s}.\n- Manter histórico para detectar drift.\n\n# ET★ Canários\n\n- Curto, objetivo, com gabaritos por palavras-chave.\n- Classificação binária simples para P/S.\n- Amostras “públicas” e “ocultas” (evitar overfit).\n- Gate obrigatório antes de integrar nova iteração.\n\n# ET★ Guardrails\n\n- Bloquear integração quando:\n  - R (latência/custo) > limite\n  - S (estabilidade) < limiar\n  - Canários (públicos/ocultos) falham\n- Rollback automático + registro de motivo\n- Transparência: escrever sempre no log de decisão"}}